;; Analyzed by ClojureScript 1.7.48
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name guardian-alerts.core, :imports nil, :requires {async cljs.core.async, cljs.core.async cljs.core.async, nodejs cljs.nodejs, cljs.nodejs cljs.nodejs, guardian-alerts.scrape guardian-alerts.scrape, guardian-alerts.db guardian-alerts.db, guardian-alerts.text guardian-alerts.text}, :uses {parse-article guardian-alerts.scrape, migrate-db guardian-alerts.db, rss-items guardian-alerts.scrape, init-db guardian-alerts.db, buffer cljs.core.async, close! cljs.core.async, chan cljs.core.async, pipeline cljs.core.async, pipe cljs.core.async, fetch-page guardian-alerts.scrape, update-row guardian-alerts.db, each-row guardian-alerts.db, read-edn guardian-alerts.text, pipeline-async cljs.core.async, repair-row guardian-alerts.db, keyword-match guardian-alerts.text, put! cljs.core.async}, :defs {source {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/core.cljs", :line 11, :column 7, :end-line 11, :end-column 13, :arglists (quote ([f])), :doc "Convert a function f taking one argument and a callback to a function taking\n  one argument and an output chan, formed by calling f with a callback that places \n  the result of f on the channel. Optionally close the channel after the callback \n  returns. Return the output channel."}, :name guardian-alerts.core/source, :variadic false, :file "src/guardian_alerts/core.cljs", :end-column 13, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :doc "Convert a function f taking one argument and a callback to a function taking\n  one argument and an output chan, formed by calling f with a callback that places \n  the result of f on the channel. Optionally close the channel after the callback \n  returns. Return the output channel."}, -main {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/core.cljs", :line 21, :column 7, :end-line 21, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name guardian-alerts.core/-main, :variadic true, :file "src/guardian_alerts/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:db-file :keywords :link :rss-feed :guid}, :order [:db-file :rss-feed :keywords :link :guid]}, :doc nil}