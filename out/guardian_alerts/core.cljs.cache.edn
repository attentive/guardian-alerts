;; Analyzed by ClojureScript 1.7.48
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name guardian-alerts.core, :imports nil, :requires {async cljs.core.async, cljs.core.async cljs.core.async, nodejs cljs.nodejs, cljs.nodejs cljs.nodejs, guardian-alerts.scrape guardian-alerts.scrape, guardian-alerts.pipeline guardian-alerts.pipeline, guardian-alerts.db guardian-alerts.db, guardian-alerts.text guardian-alerts.text}, :uses {migrate-db guardian-alerts.db, <! cljs.core.async, rss-items guardian-alerts.scrape, init-db guardian-alerts.db, close! cljs.core.async, chan cljs.core.async, tap cljs.core.async, full-article guardian-alerts.scrape, async| guardian-alerts.pipeline, cond| guardian-alerts.pipeline, | guardian-alerts.pipeline, re-source| guardian-alerts.pipeline, fetch-page guardian-alerts.scrape, update-row guardian-alerts.db, each-row guardian-alerts.db, source| guardian-alerts.pipeline, read-edn guardian-alerts.text, seq| guardian-alerts.pipeline, repair-row guardian-alerts.db, keyword-match guardian-alerts.text, mult cljs.core.async, sink| guardian-alerts.pipeline, put! cljs.core.async}, :defs {full-articles {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/core.cljs", :line 12, :column 7, :end-line 12, :end-column 20, :arglists (quote ([in-chan]))}, :name guardian-alerts.core/full-articles, :variadic false, :file "src/guardian_alerts/core.cljs", :end-column 20, :method-params ([in-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([in-chan]))}, -main {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/core.cljs", :line 17, :column 7, :end-line 17, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name guardian-alerts.core/-main, :variadic true, :file "src/guardian_alerts/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:db-file :else :recur :keywords :link :rss-feed}, :order [:link :db-file :rss-feed :keywords :recur :else]}, :doc nil}