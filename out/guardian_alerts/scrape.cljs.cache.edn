;; Analyzed by ClojureScript 1.7.48
{:use-macros nil, :excludes #{}, :name guardian-alerts.scrape, :imports nil, :requires {guardian-alerts.text guardian-alerts.text}, :uses {keywordize guardian-alerts.text}, :defs {request {:name guardian-alerts.scrape/request, :file "src/guardian_alerts/scrape.cljs", :line 4, :column 1, :end-line 4, :end-column 17, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 4, :column 10, :end-line 4, :end-column 17}}, cheerio {:name guardian-alerts.scrape/cheerio, :file "src/guardian_alerts/scrape.cljs", :line 5, :column 1, :end-line 5, :end-column 17, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 5, :column 10, :end-line 5, :end-column 17}}, libxmljs {:name guardian-alerts.scrape/libxmljs, :file "src/guardian_alerts/scrape.cljs", :line 6, :column 1, :end-line 6, :end-column 18, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 6, :column 10, :end-line 6, :end-column 18}}, fetch-page {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([url callback]))}, :name guardian-alerts.scrape/fetch-page, :variadic false, :file "src/guardian_alerts/scrape.cljs", :end-column 17, :method-params ([url callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url callback]))}, DUBLINCORE-NS {:name guardian-alerts.scrape/DUBLINCORE-NS, :file "src/guardian_alerts/scrape.cljs", :line 16, :column 1, :end-line 16, :end-column 23, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 16, :column 10, :end-line 16, :end-column 23}}, get-text {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 18, :column 8, :end-line 18, :end-column 16, :private true, :arglists (quote ([item path] [item path ns-uri])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([item path] [item path ns-uri]), :arglists ([item path] [item path ns-uri]), :arglists-meta (nil nil)}}, :private true, :name guardian-alerts.scrape/get-text, :variadic false, :file "src/guardian_alerts/scrape.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([item path] [item path ns-uri]), :arglists ([item path] [item path ns-uri]), :arglists-meta (nil nil)}, :method-params ([item path] [item path ns-uri]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 3, :fn-var true, :arglists ([item path] [item path ns-uri])}, parse-rss-item {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 23, :column 8, :end-line 23, :end-column 22, :private true, :arglists (quote ([frag]))}, :private true, :name guardian-alerts.scrape/parse-rss-item, :variadic false, :file "src/guardian_alerts/scrape.cljs", :end-column 22, :method-params ([frag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frag]))}, rss-items {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 33, :column 7, :end-line 33, :end-column 16, :arglists (quote ([xml]))}, :name guardian-alerts.scrape/rss-items, :variadic false, :file "src/guardian_alerts/scrape.cljs", :end-column 16, :method-params ([xml]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xml]))}, parse-article {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/scrape.cljs", :line 37, :column 7, :end-line 37, :end-column 20, :arglists (quote ([html-text]))}, :name guardian-alerts.scrape/parse-article, :variadic false, :file "src/guardian_alerts/scrape.cljs", :end-column 20, :method-params ([html-text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([html-text]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:description :date :article :keywords :title :author :link :guid}, :order [:guid :link :title :date :author :description :keywords :article]}, :doc nil}