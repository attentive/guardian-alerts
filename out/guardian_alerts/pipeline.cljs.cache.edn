;; Analyzed by ClojureScript 1.7.48
{:use-macros {go cljs.core.async.macros, while-let guardian-alerts.macros}, :excludes #{}, :name guardian-alerts.pipeline, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, close! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {source| {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/pipeline.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([f & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name guardian-alerts.pipeline/source|, :variadic true, :file "src/guardian_alerts/pipeline.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([f & args])}, re-source| {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/pipeline.cljs", :line 11, :column 7, :end-line 11, :end-column 17, :arglists (quote ([in-chan f & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(in-chan f args)], :arglists ([in-chan f & args]), :arglists-meta (nil)}}, :name guardian-alerts.pipeline/re-source|, :variadic true, :file "src/guardian_alerts/pipeline.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(in-chan f args)], :arglists ([in-chan f & args]), :arglists-meta (nil)}, :method-params [(in-chan f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists ([in-chan f & args])}, sink| {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/pipeline.cljs", :line 17, :column 7, :end-line 17, :end-column 12, :arglists (quote ([in-chan f]))}, :name guardian-alerts.pipeline/sink|, :variadic false, :file "src/guardian_alerts/pipeline.cljs", :end-column 12, :method-params ([in-chan f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in-chan f]))}, | {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/pipeline.cljs", :line 21, :column 7, :end-line 21, :end-column 8, :arglists (quote ([in-chan f]))}, :name guardian-alerts.pipeline/|, :variadic false, :file "src/guardian_alerts/pipeline.cljs", :end-column 8, :method-params ([in-chan f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in-chan f]))}, seq| {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/pipeline.cljs", :line 26, :column 7, :end-line 26, :end-column 11, :arglists (quote ([in-chan f]))}, :name guardian-alerts.pipeline/seq|, :variadic false, :file "src/guardian_alerts/pipeline.cljs", :end-column 11, :method-params ([in-chan f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in-chan f]))}, cond| {:protocol-inline nil, :meta {:file "/Volumes/Space/personal/dev/guardian-alerts/src/guardian_alerts/pipeline.cljs", :line 32, :column 7, :end-line 32, :end-column 12, :arglists (quote ([in-chan pred]))}, :name guardian-alerts.pipeline/cond|, :variadic false, :file "src/guardian_alerts/pipeline.cljs", :end-column 12, :method-params ([in-chan pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in-chan pred]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, guardian-alerts.macros guardian-alerts.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}